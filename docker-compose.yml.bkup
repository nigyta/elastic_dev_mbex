version: '3.7'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
  es02:
    build: .
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - esnet

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local

networks:
  esnet:

# version: '3.7'
# services:
      
#     es01:
#         image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
#         container_name: es01
#         environment:
#           - node.name=es01
#           - discovery.seed_hosts=es02
#           - cluster.initial_master_nodes=es01,es02
#           - cluster.name=docker-cluster
#           - bootstrap.memory_lock=true
#           - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#         ulimits:
#           memlock:
#             soft: -1
#             hard: -1
#         volumes:
#           - esdata01:/usr/share/elasticsearch/data
#         ports:
#           - 9200:9200
#         networks:
#           - esnet
#     es02:
#         build: .
#         container_name: es02
#         environment:
#           - node.name=es02
#           - discovery.seed_hosts=es01
#           - cluster.initial_master_nodes=es01,es02
#           - cluster.name=docker-cluster
#           - bootstrap.memory_lock=true
#           - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#         ulimits:
#           memlock:
#             soft: -1
#             hard: -1
#         volumes:
#           - esdata02:/usr/share/elasticsearch/data
#         networks:
#           - esnet
    


#         # db:
#     #     image: mysql:5.7
#     #     ports:
#     #         # localの13306をコンテナの3306にマッピング
#     #         # localから接続する場合　mysql -u root -p -h 127.0.0.1 -P 13306 marpolbase2
#     #         - "13306:3306"
#     #     volumes:
#     #         # DB初期化用のSQLをいれておく（ファイル名は 1_hoge.sql. 2_hoge.sql ...)
#     #         - ../marpolbase_data/mysql_init:/docker-entrypoint-initdb.d
#     #         # DB永続化用ディレクトリ
#     #         - ../marpolbase_data/mysql_data:/var/lib/mysql
#     #     environment:
#     #         # 下記はDB初期化時に設定されると思われる
#     #         # あとから変更する場合は、../marpolbase_data/mysql_data の中を空にしてコンテナを再生成する必要あり
#     #         MYSQL_DATABASE: marpolbase2
#     #         MYSQL_ROOT_PASSWORD: Marp0lbase#
#     #         MYSQL_USER: marchantia
#     #         MYSQL_PASSWORD: Marp0lbase#
#     #         TZ: Asia/Tokyo

#     # app:
#     #     build: .
#     #     # image: 
#     #     command: bash # python /code/manage.py runserver -h 0.0.0.0 -p 5000 --threaded -d
#     #     # volumes:
#     #     ports:
#     #         - 5000:5000
#     #     # depends_on:
#     #         # - db
#     #     environment:
#     #         - TZ=Asia/Tokyo            

# volumes:
#     esdata01:
#         driver: local
#     esdata02:
#         driver: local
    
# networks:
#     esnet:
#         driver: bridge
